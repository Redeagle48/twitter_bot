var request = require("request"),
  cheerio = require("cheerio"),
  autolinker = require('autolinker');

//
//  BotV2
//  class for performing various twitter actions
//
var Twit = require('../lib/twitter');

var Bot = module.exports = function (config) {
    this.twit = new Twit(config);
  };

//
// retweet
//
Bot.prototype.retweet = function (params, callback) {
    var self = this;

    console.log("\n-------------------------------------------------------------");

    self.twit.get('search/tweets', params, function (err, reply) {

        console.log("Search tweet with query: \"" + params.q + "\".");
        console.log("======================================");

        // When there is an error with the request
        if (err) return callback(err);

        // When there is no tweet returned in the search
        if (typeof reply === 'undefined' || reply.statuses.length === 0) {
            return console.log("=> There is no tweet returned in the search.\n======================================");
        }

        // Get the hour when the operation is happening
        var current_hour = getDateTime();
        console.log("=> Actual date time: " + current_hour);
        console.log("======================================");

        // Dump returned tweets
        var tweets = reply.statuses;
        console.log("=> Returned tweets from search: " + JSON.stringify(tweets.length));
        console.log("======================================");

        // Get a random tweet from the returned tweets
        var randomTweet = randIndex(tweets);
        console.log("=> Tweet:\nlang = " + randomTweet.metadata.iso_language_code +
                    ";\ntext = " + JSON.stringify(randomTweet.text));
        console.log("======================================");

        // Only accepts a tweet in english or portuguese
        if (randomTweet.metadata.iso_language_code === "en" ||
            randomTweet.metadata.iso_language_code === "pt") {

            console.log("=> Tweet to be processed since language is \"en\" or \"pt\"");
            console.log("======================================");

            // get url
            var url = autolinker.link( randomTweet.text )
                                    .split("<a href=\"")[1]
                                    .split("\"")[0];
            
            // Compose the Tweet and post it
            composeTweet(self.twit, callback, url, randomTweet.text);

        } else {
            console.log("=> Rejected Tweet since language isn't \"en\" or \"pt\"");
            console.log("==================END====================");
        }

    });
};

/**
 * Compose tweet and post it
 * @param  {[type]} twitterproxy        Object to the twit library
 * @param  {[type]} tweetcallback       Callback
 * @param  {[type]} url                 Url presented in the original tweet
 * @param  {[type]} tweet_text_original Tweet selected to be processed
 */
function composeTweet(twitterproxy, tweetcallback, url, tweet_text_original) {

    if(url != ""){
        console.log("URL detected");
        console.log("======================================");
        request(url, function (error, response, body) {

            if (error) {
                console.log("Couldnâ€™ t get page because of error: " + error);
                return;
            }    

            var $ = cheerio.load(body);

            var links = $('meta[name=Author]');
            
            // Is Expresso Emprego?
            if($('meta[name=Author]').attr('content') === "Expresso Emprego") {
                console.log("Tweet from Expresso Emprego");

                var job = $('h1[class="back h xslTitulo"]');
                job = job.text().split("\t")[0].split("(m")[0];

                var company = $('h2[class="xslTitulo"]').text().split("Empresa:")[1].trim();
                                    
                var location = $('h1[class="back h xslTitulo"]').children().text();
                    
                // TODO:
                // 1) Bigger than 140 charecters
                tweet_text_original = job.trim() + 
                                        ((company != "") ? " (" + company + ")" : "") +
                                        " -" +
                                        ((location.trim() != "") ? location.trim() : "") +
                                        " " + url + " #expressoemprego";
                                    
                //tweet_text_original = job.trim() + " (" + company + ") - " + location.trim() + " " + url + " #expressoemprego";

            }
            // Is from IT Jobs?
            else if($('meta[content="ITJobs"]').length != 0) {
                if(links.length != 0) {
                    console.log("====== Sou IT Jobs");
                    //TODO
                }
            }

            // Tweet
            postTweet(twitterproxy, tweet_text_original, tweetcallback);

        })
    } 
    // if url is empty
    else {
        console.log("URL not detected");
        console.log("======================================");

        // Tweet
        postTweet(twitterproxy, tweet_text_original, tweetcallback);
    }

}

// Last posted tweets
var history = [];

/**
 * Post tweet to Twitter
 */
function postTweet(twitterproxy, tweetText, tweetcallback){

    console.log("Text to post: " + tweetText);
    console.log("Posting history: \n[" + history + "]");
    console.log("======================================");

    // Isn't in the last 3 posted tweets -> to post
    if(history.indexOf(tweetText) === -1) {

        console.log("Tweet to be posted");
        console.log("======================================");

        history.push(tweetText);
        
        if(history.length >= 3) {
            history = history.slice(1,history.length);
        }

        // Post
        twitterproxy.post('statuses/update', {
            status: tweetText
        }, tweetcallback);
    }  
    // Is in the last 3 posted tweets -> not to post
    else {
        console.log("Repeated Tweet");
        console.log("==================END====================");
    }
}

//
// Returns a random element from an array
//
function randIndex(arr) {
    var index = Math.floor(arr.length * Math.random());
    return arr[index];
};

//
// Get todays date
//
function getDateTime() {

    var date = new Date();
    var monthNames = ["Initial", "Jan", "Feb", "Mar", "April", "May", "June",
                      "July", "Aug", "Sept", "Oct", "Nov", "Dec"
                     ];

    var hour = date.getHours();
    hour = (hour < 10 ? "0" : "") + hour;

    var min  = date.getMinutes();
    min = (min < 10 ? "0" : "") + min;

    var sec  = date.getSeconds();
    sec = (sec < 10 ? "0" : "") + sec;

    var year = date.getFullYear();

    var month = date.getMonth() + 1;
    month = (month < 10 ? "0" : "") + month;

    var day  = date.getDate();
    day = (day < 10 ? "0" : "") + day;

    return year + "/" + monthNames[parseInt(month)] + "/" + day + " at " + hour + ":" + min + ":" + sec;

}